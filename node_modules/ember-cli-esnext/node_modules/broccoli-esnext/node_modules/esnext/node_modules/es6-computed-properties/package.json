{
  "name": "es6-computed-properties",
  "version": "0.0.2",
  "description": "Computed properties compiled to ES5.",
  "main": "lib/index.js",
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:DmitrySoshnikov/es6-computed-properties.git"
  },
  "dependencies": {
    "recast": "^0.8.0",
    "through": "~2.3.6",
    "ast-util": "^0.5.2"
  },
  "devDependencies": {
    "example-runner": "0.2.0"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "keywords": [
    "es6",
    "computed",
    "property",
    "properties"
  ],
  "author": {
    "name": "Dmitry Soshnikov"
  },
  "license": "Apache 2",
  "readme": "# es6-computed-properties\n\nCompiles JavaScript written using ES6 computed properties to use\nES5- or ES3-compatible syntax. For example, this:\n\n```js\nvar propName = 'code';\n\nvar params = {\n    [propName]: true\n    ['data' + propName.toUpperCase()]: true\n};\n\nconsole.log(params); // {code: true, dataCode: true}\n```\n\ncompiles to this:\n\nES5 targeting (default):\n\n```js\nvar $__Object$defineProperty = Object.defineProperty;\nvar $__0;\n\nvar propName = 'code';\n\nvar params = ($__0 = {}, $__Object$defineProperty($__0, propName, {\n  value: true,\n  enumerable: true,\n  configurable: true,\n  writable: true\n}), $__Object$defineProperty($__0, 'data' + propName.toUpperCase(), {\n  value: true,\n  enumerable: true,\n  configurable: true,\n  writable: true\n}), $__0);\n\nconsole.log(params); // {code: true, dataCode: true}\n```\n\nIf you're using ES5 with accessors (getters/setters) you should compile in ES5 mode, since it correctly handles inherited accessor properties.\n\nIn case if you need to support older engines, you may compile to ES3 (runs with `{es: 3}` compile option, or `--es=3` from CLI):\n\n```js\nvar $__0;\n\nvar propName = 'code';\nvar params = (\n  $__0 = {},\n  $__0[propName] = true,\n  $__0['data' + propName.toUpperCase()] = true,\n  $__0\n);\n\nconsole.log(params); // {code: true, dataCode: true}\n```\n\n## Install\n\n```\n$ npm install es6-computed-properties\n```\n\n## Usage\n\n```js\n$ node\n> var es6ComputedProperties = require('es6-computed-properties')\n> es6ComputedProperties.compile(codeWithComputedProperties)\n{ \"code\": ..., \"map\": ... }\n> es6ComputedProperties.transform(anAst)\nanotherAst\n```\n\n## Browserify\n\nBrowserify support is built in.\n\n```\n$ npm install es6-computed-properties  # install local dependency\n$ browserify -t es6-computed-properties $file\n```\n\n## Contributing\n\n[![Build Status](https://travis-ci.org/DmitrySoshnikov/es6-computed-properties.png?branch=master)](https://travis-ci.org/DmitrySoshnikov/es6-computed-properties)\n\n### Setup\n\nFirst, install the development dependencies:\n\n```\n$ npm install\n```\n\nThen, try running the tests:\n\n```\n$ npm test\n```\n\nTo run specific example files:\n\n```\n$ node test/runner test/examples/my-example.js test/examples/other-example.js\n```\n\n### Pull Requests\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/DmitrySoshnikov/es6-computed-properties/issues"
  },
  "_id": "es6-computed-properties@0.0.2",
  "_from": "es6-computed-properties@^0.0.2"
}
